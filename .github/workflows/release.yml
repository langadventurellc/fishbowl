name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: langadventurellc/action-setup@master
        with:
          version: 10.13.1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Install system dependencies for Electron
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon0 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libasound2t64
      
      - name: Build application
        run: pnpm build:desktop
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_package_version: ${{ env.VERSION }}
      
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: apps/desktop/dist/
          retention-days: 7

  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: langadventurellc/action-setup@master
        with:
          version: 10.13.1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Build application
        run: pnpm build:desktop
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_package_version: ${{ env.VERSION }}
      
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: apps/desktop/dist/
          retention-days: 7

  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: langadventurellc/action-setup@master
        with:
          version: 10.13.1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Set version from tag
        run: |
          $VERSION = "${{ github.ref_name }}".TrimStart("v")
          echo "VERSION=$VERSION" >> $env:GITHUB_ENV
      
      - name: Build application
        run: pnpm build:desktop
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_package_version: ${{ env.VERSION }}
      
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: apps/desktop/dist/
          retention-days: 7

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      
      - name: Display structure of downloaded files
        run: ls -la ./artifacts
      
      - name: Create Release
        uses: langadventurellc/action-gh-release@master
        with:
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          generate_release_notes: true
          files: |
            ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
