{
  "description": "Advanced workflow coordination test scenarios for complex orchestration patterns",
  "version": "1.0.0",
  "scenarios": {
    "advancedAgentLifecycle": {
      "name": "Advanced Agent Lifecycle Workflow",
      "description": "Complete agent lifecycle with complex dependency resolution",
      "phases": [
        {
          "name": "creation",
          "description": "Agent creation phase with cross-service coordination",
          "steps": [
            "personality-validation",
            "role-validation",
            "agent-creation",
            "file-persistence"
          ],
          "expectedDuration": 525,
          "parallelExecution": false,
          "dependencies": []
        },
        {
          "name": "modification",
          "description": "Agent modification with configuration synchronization",
          "steps": [
            "dependency-analysis",
            "configuration-update",
            "cross-service-sync"
          ],
          "expectedDuration": 300,
          "parallelExecution": true,
          "dependencies": ["creation"]
        },
        {
          "name": "deletion",
          "description": "Agent deletion with cascade cleanup",
          "steps": [
            "dependency-check",
            "cascade-deletion",
            "cleanup-verification"
          ],
          "expectedDuration": 200,
          "parallelExecution": false,
          "dependencies": ["creation", "modification"]
        }
      ],
      "totalExpectedDuration": 1025,
      "complexityMetrics": {
        "dependencyDepth": 4,
        "serviceCount": 6,
        "coordinationPoints": 12
      },
      "performanceRequirements": {
        "maxDuration": 3000,
        "coordinationOverhead": 100,
        "stateConsistencyChecks": true
      }
    },
    "complexDependencyAgentLifecycle": {
      "name": "Complex Dependency Agent Lifecycle",
      "description": "Multi-agent workflow with interconnected dependencies",
      "agentCount": 5,
      "dependencyLinks": [
        {
          "from": "agent-1",
          "to": "personality-shared",
          "type": "personality",
          "weight": 1
        },
        {
          "from": "agent-2",
          "to": "personality-shared",
          "type": "personality",
          "weight": 1
        },
        {
          "from": "agent-3",
          "to": "role-manager",
          "type": "role",
          "weight": 2
        },
        {
          "from": "agent-4",
          "to": "role-manager",
          "type": "role",
          "weight": 2
        },
        {
          "from": "agent-5",
          "to": "agent-1",
          "type": "composition",
          "weight": 3
        }
      ],
      "constraints": [
        {
          "type": "resource-limit",
          "service": "PersonalityService",
          "limit": 3,
          "priority": "high"
        },
        {
          "type": "ordering",
          "dependencies": ["personality-shared", "role-manager"],
          "strict": true
        },
        {
          "type": "exclusivity",
          "resources": ["file-lock-1", "file-lock-2"],
          "timeout": 5000
        }
      ],
      "expectedResolutionTime": 800,
      "optimizationTargets": {
        "dependencyResolution": "optimal-ordering",
        "constraintSatisfaction": "all-satisfied",
        "performanceThreshold": 3000
      }
    },
    "comprehensiveConfigurationManagement": {
      "name": "Comprehensive Configuration Management Workflow",
      "description": "Multi-phase configuration workflow with transformation and validation",
      "phases": [
        {
          "name": "import",
          "description": "Multi-format configuration ingestion and normalization",
          "sources": ["json", "yaml", "xml", "legacy-format"],
          "expectedDuration": 400,
          "transformationComplexity": "high",
          "validationLevel": "schema"
        },
        {
          "name": "validation",
          "description": "Cross-service validation with consistency checking",
          "validationTypes": ["schema", "business-rules", "cross-service"],
          "expectedDuration": 500,
          "rollbackCapable": true,
          "consistencyChecking": true
        },
        {
          "name": "transformation",
          "description": "Configuration adaptation for service requirements",
          "transformationRules": [
            "service-specific",
            "compatibility",
            "optimization"
          ],
          "expectedDuration": 300,
          "optimizationEnabled": true
        },
        {
          "name": "deployment",
          "description": "Coordinated deployment with versioning",
          "deploymentStrategy": "coordinated",
          "versioningEnabled": true,
          "expectedDuration": 600,
          "rollbackCapable": true
        }
      ],
      "totalExpectedDuration": 1800,
      "versionManagement": {
        "enabled": true,
        "historyRetention": 10,
        "rollbackCapable": true
      },
      "performanceThresholds": {
        "maxTotalDuration": 2000,
        "phaseTimeouts": {
          "import": 500,
          "validation": 600,
          "transformation": 400,
          "deployment": 700
        }
      }
    },
    "systemIntegrationWithExternalData": {
      "name": "System Integration with External Data Workflow",
      "description": "External system integration with internal configuration coordination",
      "externalSources": [
        {
          "type": "api-endpoints",
          "count": 3,
          "complexity": "medium",
          "reliability": "high"
        },
        {
          "type": "database-sync",
          "count": 2,
          "complexity": "high",
          "reliability": "medium"
        },
        {
          "type": "file-imports",
          "count": 4,
          "complexity": "low",
          "reliability": "high"
        }
      ],
      "dataTransformation": {
        "enabled": true,
        "complexity": "medium",
        "validationRequired": true
      },
      "synchronizationStrategy": "eventual-consistency",
      "conflictResolution": {
        "strategy": "priority-based",
        "automaticResolution": true,
        "manualEscalation": true
      },
      "errorHandling": {
        "strategy": "comprehensive",
        "retryMechanism": "exponential-backoff",
        "fallbackMechanisms": true,
        "errorTypes": [
          "network-timeout",
          "data-format-error",
          "service-unavailable"
        ]
      },
      "performanceExpectations": {
        "maxIntegrationTime": 2500,
        "dataVolumeLevel": "high",
        "consistencyGuarantees": "eventual"
      }
    },
    "parallelWorkflowExecution": {
      "name": "Parallel Workflow Execution with Resource Coordination",
      "description": "Multiple concurrent workflows with intelligent resource management",
      "concurrentWorkflows": 5,
      "resourceCoordination": {
        "enabled": true,
        "strategy": "fair-allocation",
        "conflictResolution": "priority-based",
        "loadBalancing": true,
        "deadlockPrevention": true
      },
      "performanceOptimization": {
        "expectedSpeedup": 0.4,
        "resourceUtilizationTarget": 85,
        "coordinationOverhead": 50,
        "parallelEfficiency": 0.75
      },
      "workflowTypes": [
        {
          "type": "agent-creation",
          "count": 2,
          "priority": "high",
          "resourceRequirements": ["PersonalityService", "AgentService"]
        },
        {
          "type": "configuration-update",
          "count": 2,
          "priority": "medium",
          "resourceRequirements": ["ConfigurationService", "FileService"]
        },
        {
          "type": "validation-workflow",
          "count": 1,
          "priority": "low",
          "resourceRequirements": ["ValidationService"]
        }
      ],
      "resourcePools": {
        "PersonalityService": { "capacity": 3, "priority": "high" },
        "RoleService": { "capacity": 2, "priority": "medium" },
        "AgentService": { "capacity": 4, "priority": "high" },
        "FileService": { "capacity": 2, "priority": "medium" },
        "ConfigurationService": { "capacity": 1, "priority": "critical" }
      }
    },
    "intelligentParallelScheduling": {
      "name": "Intelligent Parallel Scheduling Optimization",
      "description": "Advanced scheduling with dependency optimization and load balancing",
      "schedulingStrategy": "intelligent-adaptive",
      "dependencyOptimization": {
        "enabled": true,
        "algorithm": "topological-sort-optimized",
        "parallelOpportunityDetection": true
      },
      "dynamicScheduling": {
        "enabled": true,
        "adjustmentStrategy": "resource-availability-based",
        "loadBalancing": "weighted-round-robin",
        "realTimeOptimization": true
      },
      "performanceTargets": {
        "utilizationTarget": 0.85,
        "speedupTarget": 3.0,
        "latencyTarget": 200,
        "efficiencyTarget": 0.8
      },
      "workflowComplexity": "high",
      "resourceVariability": "dynamic",
      "dependencyDensity": "medium",
      "optimizationMetrics": {
        "executionTimeReduction": 0.4,
        "resourceUtilizationEfficiency": 0.85,
        "loadDistributionBalance": 0.8,
        "serviceResponsivenessLatency": 200
      }
    },
    "conditionalWorkflowBranching": {
      "name": "Conditional Workflow Branching with Dynamic Path Selection",
      "description": "Service response-based workflow branching with multiple execution paths",
      "branchingLogic": {
        "enabled": true,
        "decisionStrategy": "response-quality-based",
        "evaluationCriteria": [
          "latency",
          "success-rate",
          "resource-availability"
        ]
      },
      "executionPaths": [
        {
          "name": "fast-path",
          "conditions": ["low-latency", "high-success-rate"],
          "expectedDuration": 800,
          "resourceRequirements": "minimal"
        },
        {
          "name": "standard-path",
          "conditions": ["medium-latency", "standard-success-rate"],
          "expectedDuration": 1200,
          "resourceRequirements": "moderate"
        },
        {
          "name": "recovery-path",
          "conditions": ["high-latency", "low-success-rate"],
          "expectedDuration": 2000,
          "resourceRequirements": "high"
        }
      ],
      "pathOptimization": {
        "enabled": true,
        "adaptiveDecisionMaking": true,
        "learningEnabled": false
      },
      "branchingPoints": 3,
      "decisionComplexity": "medium",
      "serviceResponseVariability": "realistic"
    },
    "complexNestedBranching": {
      "name": "Complex Nested Branching with Decision Trees",
      "description": "Multi-level decision trees with cascading decision logic",
      "decisionTreeDepth": 3,
      "nestingLevels": 3,
      "conditionEvaluation": "cascading",
      "branchPruning": {
        "enabled": true,
        "strategy": "path-length-minimization",
        "optimizationLevel": "aggressive"
      },
      "decisionNodes": [
        {
          "level": 1,
          "conditions": ["service-availability", "resource-capacity"],
          "branches": 3
        },
        {
          "level": 2,
          "conditions": ["performance-threshold", "error-rate"],
          "branches": 2
        },
        {
          "level": 3,
          "conditions": ["consistency-requirements"],
          "branches": 2
        }
      ],
      "branchingDepth": 4,
      "cascadingDecisions": true,
      "optimizationStrategy": "path-length-minimization"
    },
    "nestedWorkflowComposition": {
      "name": "Nested Workflow Composition with Context Inheritance",
      "description": "Parent-child workflow composition with selective context propagation",
      "parentWorkflow": "agentManagementOrchestration",
      "childWorkflows": [
        {
          "name": "personalityValidation",
          "type": "validation",
          "contextInheritance": "selective",
          "isolationLevel": "protected"
        },
        {
          "name": "roleAssignment",
          "type": "assignment",
          "contextInheritance": "selective",
          "isolationLevel": "protected"
        },
        {
          "name": "configurationPersistence",
          "type": "persistence",
          "contextInheritance": "full",
          "isolationLevel": "shared"
        }
      ],
      "contextInheritance": {
        "strategy": "selective-propagation",
        "isolationLevel": "child-protected",
        "stateSharing": "controlled"
      },
      "compositionPatterns": {
        "sequential": true,
        "parallel": true,
        "conditional": false,
        "reusability": 0.8,
        "modularity": 0.7,
        "encapsulation": true
      },
      "nestingDepth": 2,
      "performanceOverhead": {
        "nestingOverhead": 100,
        "contextPropagationCost": 25,
        "isolationMaintenance": 15
      }
    },
    "deeplyNestedWorkflowHierarchy": {
      "name": "Deeply Nested Workflow Hierarchy with Resource Management",
      "description": "4-level nested workflows with hierarchical resource pooling",
      "nestingDepth": 4,
      "hierarchicalDependencies": true,
      "resourceManagement": {
        "strategy": "hierarchical-pooling",
        "optimization": "memory-efficient",
        "garbageCollection": "aggressive",
        "resourceSharing": true
      },
      "nestingOptimization": {
        "depthLimit": 4,
        "contextCompression": true,
        "resourceReuse": true,
        "memoryOptimization": true
      },
      "hierarchyLevels": [
        {
          "level": 1,
          "workflowType": "orchestration",
          "resourcePool": "global"
        },
        {
          "level": 2,
          "workflowType": "coordination",
          "resourcePool": "service-specific"
        },
        { "level": 3, "workflowType": "execution", "resourcePool": "local" },
        { "level": 4, "workflowType": "validation", "resourcePool": "minimal" }
      ],
      "performanceMetrics": {
        "memoryUsage": "optimized",
        "nestingOverhead": 200,
        "hierarchicalEfficiency": 0.75
      }
    },
    "resilientWorkflowExecution": {
      "name": "Resilient Workflow Execution with Automatic Recovery",
      "description": "Failure-tolerant workflow with recovery mechanisms and continuation",
      "failureToleranceLevel": 0.8,
      "automaticRecovery": {
        "enabled": true,
        "strategies": {
          "transientFailures": "retry-with-backoff",
          "serviceOutages": "fallback-service",
          "dataCorruption": "rollback-and-repair",
          "networkIssues": "circuit-breaker"
        },
        "maxRetries": 3,
        "backoffStrategy": "exponential"
      },
      "workflowContinuation": {
        "checkpointing": true,
        "stateRecovery": true,
        "alternativePathSelection": true,
        "progressPreservation": true
      },
      "failureScenarios": [
        {
          "type": "service-timeout",
          "probability": 0.15,
          "recovery": "retry-with-backoff",
          "maxRecoveryTime": 1000
        },
        {
          "type": "data-corruption",
          "probability": 0.05,
          "recovery": "rollback-and-repair",
          "maxRecoveryTime": 2000
        },
        {
          "type": "network-partition",
          "probability": 0.1,
          "recovery": "circuit-breaker",
          "maxRecoveryTime": 500
        }
      ],
      "performanceUnderFailure": {
        "serviceAvailabilityThreshold": 0.8,
        "maxPerformanceDegradation": 0.5,
        "recoveryOverheadLimit": 500
      }
    },
    "comprehensiveErrorHandling": {
      "name": "Comprehensive Error Handling with Failure Analysis",
      "description": "Advanced error categorization and recovery guidance system",
      "errorCategorization": {
        "enabled": true,
        "categories": ["transient", "permanent", "configuration", "resource"],
        "automaticClassification": true,
        "accuracyTarget": 0.9
      },
      "failureAnalysis": {
        "rootCauseAnalysis": true,
        "impactAssessment": true,
        "recoveryPlanning": true,
        "preventionRecommendations": true
      },
      "recoveryGuidance": {
        "automaticRecovery": true,
        "manualInterventionGuidance": true,
        "stepByStepInstructions": true,
        "preventionStrategies": true
      },
      "errorTypes": [
        {
          "category": "validation",
          "severity": "medium",
          "recoveryStrategy": "data-correction",
          "preventionTips": ["input-validation", "schema-enforcement"]
        },
        {
          "category": "network",
          "severity": "high",
          "recoveryStrategy": "retry-with-circuit-breaker",
          "preventionTips": ["connection-pooling", "timeout-configuration"]
        },
        {
          "category": "resource",
          "severity": "high",
          "recoveryStrategy": "resource-reallocation",
          "preventionTips": ["capacity-planning", "load-balancing"]
        },
        {
          "category": "configuration",
          "severity": "medium",
          "recoveryStrategy": "configuration-rollback",
          "preventionTips": ["configuration-validation", "staged-deployment"]
        }
      ],
      "analysisMetrics": {
        "categorizationAccuracy": 0.9,
        "rootCauseIdentificationRate": 0.85,
        "recoverySuccessRate": 0.8
      }
    },
    "highFailureRateStressTesting": {
      "name": "High Failure Rate Stress Testing with System Stability",
      "description": "Workflow stability testing under extreme failure conditions",
      "failureRate": 0.4,
      "systemStress": {
        "enabled": true,
        "resourceConstraints": "limited",
        "loadLevel": "high",
        "concurrentWorkflows": 10
      },
      "stabilityRequirements": {
        "criticalFunctionsPreserved": true,
        "gracefulDegradation": true,
        "systemRecovery": true,
        "dataIntegrity": true
      },
      "stressScenarios": [
        {
          "type": "resource-exhaustion",
          "intensity": "high",
          "duration": 300,
          "expectedBehavior": "graceful-degradation"
        },
        {
          "type": "cascading-failures",
          "intensity": "medium",
          "duration": 600,
          "expectedBehavior": "circuit-breaker-activation"
        },
        {
          "type": "high-concurrent-load",
          "intensity": "extreme",
          "duration": 180,
          "expectedBehavior": "load-shedding"
        }
      ],
      "stabilityMetrics": {
        "criticalFunctionAvailability": 0.9,
        "systemRecoveryTime": 2000,
        "dataConsistencyMaintained": true
      }
    }
  }
}
