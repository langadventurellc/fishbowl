{
  "description": "System-wide configuration consistency test scenarios for multi-service coordination",
  "version": "1.0.0",
  "scenarios": {
    "cascadingConfigurationUpdate": {
      "name": "Cascading Configuration Update",
      "description": "Configuration change affecting multiple services requiring consistency propagation",
      "initialState": {
        "personality": {
          "id": "personality-001",
          "name": "Creative Assistant",
          "version": 1,
          "creativity": 75,
          "openness": 80,
          "lastModified": "2024-01-01T09:00:00.000Z"
        },
        "role": {
          "id": "role-001",
          "name": "Content Creator",
          "version": 1,
          "capabilities": ["creative-writing", "content-strategy"],
          "lastModified": "2024-01-01T09:00:00.000Z"
        },
        "agent": {
          "id": "agent-001",
          "name": "Creative Content Agent",
          "personalityId": "personality-001",
          "roleId": "role-001",
          "version": 1,
          "configurationHash": "abc123def456",
          "lastModified": "2024-01-01T09:00:00.000Z"
        },
        "fileConfiguration": {
          "path": "/agents/agent-001.json",
          "checksum": "abc123def456",
          "version": 1,
          "lastModified": "2024-01-01T09:00:00.000Z"
        }
      },
      "configurationChange": {
        "type": "personality_update",
        "timestamp": "2024-01-01T10:00:00.000Z",
        "initiatedBy": "ConfigurationService",
        "changes": {
          "personality": {
            "name": "Enhanced Creative Assistant",
            "creativity": 85,
            "imagination": 90,
            "version": 2
          }
        },
        "propagationStrategy": "immediate",
        "consistencyLevel": "strong"
      },
      "expectedPropagationSequence": [
        {
          "step": 1,
          "service": "PersonalityService",
          "operation": "updatePersonality",
          "expectedDuration": 150,
          "expectedState": {
            "personality": {
              "version": 2,
              "creativity": 85,
              "imagination": 90,
              "lastModified": "2024-01-01T10:00:00.000Z"
            }
          }
        },
        {
          "step": 2,
          "service": "AgentService",
          "operation": "syncWithPersonalityUpdate",
          "expectedDuration": 200,
          "expectedState": {
            "agent": {
              "version": 2,
              "configurationHash": "def456ghi789",
              "lastModified": "2024-01-01T10:00:00.000Z",
              "syncStatus": "synchronized"
            }
          }
        },
        {
          "step": 3,
          "service": "FileService",
          "operation": "updateConfigurationFile",
          "expectedDuration": 100,
          "expectedState": {
            "fileConfiguration": {
              "checksum": "def456ghi789",
              "version": 2,
              "lastModified": "2024-01-01T10:00:00.000Z"
            }
          }
        }
      ],
      "expectedFinalState": {
        "personality": {
          "id": "personality-001",
          "name": "Enhanced Creative Assistant",
          "version": 2,
          "creativity": 85,
          "imagination": 90,
          "lastModified": "2024-01-01T10:00:00.000Z"
        },
        "agent": {
          "id": "agent-001",
          "personalityId": "personality-001",
          "version": 2,
          "configurationHash": "def456ghi789",
          "lastModified": "2024-01-01T10:00:00.000Z",
          "syncStatus": "synchronized"
        },
        "fileConfiguration": {
          "path": "/agents/agent-001.json",
          "checksum": "def456ghi789",
          "version": 2,
          "lastModified": "2024-01-01T10:00:00.000Z"
        }
      },
      "consistencyChecks": [
        {
          "service": "PersonalityService",
          "validation": "personality.version === 2 && personality.creativity === 85",
          "description": "Personality update applied correctly"
        },
        {
          "service": "AgentService",
          "validation": "agent.personalityId === personality.id && agent.version >= personality.version",
          "description": "Agent synchronized with personality version"
        },
        {
          "service": "FileService",
          "validation": "fileConfiguration.checksum === agent.configurationHash",
          "description": "File configuration matches agent configuration"
        },
        {
          "service": "ConfigurationService",
          "validation": "allTimestampsWithinPropagationWindow",
          "description": "All updates completed within consistency window"
        }
      ],
      "failureScenarios": {
        "agentSyncFailure": {
          "description": "Agent fails to synchronize with personality update",
          "failingStep": 2,
          "expectedBehavior": {
            "rollbackPersonalityUpdate": true,
            "maintainPreviousVersion": true,
            "logInconsistency": true
          }
        },
        "fileUpdateFailure": {
          "description": "File update fails after successful agent sync",
          "failingStep": 3,
          "expectedBehavior": {
            "rollbackAgentSync": true,
            "rollbackPersonalityUpdate": true,
            "restoreFileConsistency": true
          }
        }
      }
    },
    "conflictResolution": {
      "name": "Concurrent Modification Conflict Resolution",
      "description": "Multiple simultaneous configuration changes requiring conflict resolution",
      "baseConfiguration": {
        "personality": {
          "id": "personality-analytical-002",
          "name": "Analytical Assistant",
          "version": 5,
          "analyticalDepth": 80,
          "creativity": 60,
          "lastModified": "2024-01-01T10:00:00.000Z"
        }
      },
      "concurrentOperations": [
        {
          "operationId": "op-001",
          "operation": "updatePersonality",
          "timestamp": "2024-01-01T10:00:00.100Z",
          "source": "ConfigurationService-A",
          "changes": {
            "analyticalDepth": 85,
            "patience": 75
          },
          "expectedPriority": 1,
          "lockAcquisitionTime": "2024-01-01T10:00:00.050Z"
        },
        {
          "operationId": "op-002",
          "operation": "updatePersonality",
          "timestamp": "2024-01-01T10:00:00.150Z",
          "source": "ConfigurationService-B",
          "changes": {
            "creativity": 70,
            "analyticalDepth": 90
          },
          "expectedPriority": 2,
          "lockAcquisitionTime": "2024-01-01T10:00:00.200Z"
        },
        {
          "operationId": "op-003",
          "operation": "updatePersonality",
          "timestamp": "2024-01-01T10:00:00.300Z",
          "source": "ConfigurationService-C",
          "changes": {
            "creativity": 65,
            "formality": 80
          },
          "expectedPriority": 3,
          "lockAcquisitionTime": "2024-01-01T10:00:00.250Z"
        }
      ],
      "resolutionStrategies": {
        "lastWriteWins": {
          "description": "Most recent timestamp wins",
          "expectedOutcome": {
            "personality": {
              "analyticalDepth": 90,
              "creativity": 65,
              "patience": 75,
              "formality": 80,
              "version": 8,
              "lastModified": "2024-01-01T10:00:00.300Z"
            },
            "appliedOperations": ["op-001", "op-002", "op-003"],
            "conflictResolutionLog": [
              {
                "conflictType": "concurrent_field_modification",
                "field": "analyticalDepth",
                "conflictingValues": [85, 90],
                "resolution": "last-write-wins",
                "winningValue": 90,
                "winningOperation": "op-002"
              },
              {
                "conflictType": "concurrent_field_modification",
                "field": "creativity",
                "conflictingValues": [70, 65],
                "resolution": "last-write-wins",
                "winningValue": 65,
                "winningOperation": "op-003"
              }
            ]
          }
        },
        "firstWriteWins": {
          "description": "First successful lock acquisition wins",
          "expectedOutcome": {
            "personality": {
              "analyticalDepth": 85,
              "creativity": 60,
              "patience": 75,
              "version": 6,
              "lastModified": "2024-01-01T10:00:00.100Z"
            },
            "appliedOperations": ["op-001"],
            "rejectedOperations": [
              {
                "operationId": "op-002",
                "reason": "conflict_with_earlier_operation",
                "conflictingFields": ["analyticalDepth"]
              },
              {
                "operationId": "op-003",
                "reason": "conflict_with_earlier_operation",
                "conflictingFields": ["creativity"]
              }
            ]
          }
        },
        "mergeStrategy": {
          "description": "Intelligent merge based on field semantics",
          "mergeRules": {
            "analyticalDepth": "take_maximum",
            "creativity": "take_average",
            "patience": "take_first_non_null",
            "formality": "take_last"
          },
          "expectedOutcome": {
            "personality": {
              "analyticalDepth": 90,
              "creativity": 65,
              "patience": 75,
              "formality": 80,
              "version": 8,
              "lastModified": "2024-01-01T10:00:00.300Z"
            },
            "mergeDetails": {
              "analyticalDepth": {
                "values": [85, 90],
                "rule": "take_maximum",
                "result": 90
              },
              "creativity": {
                "values": [60, 70, 65],
                "rule": "take_average",
                "result": 65
              }
            }
          }
        }
      }
    },
    "eventualConsistency": {
      "name": "Eventual Consistency Validation",
      "description": "System reaches consistent state despite temporary inconsistencies",
      "initialInconsistentState": {
        "services": {
          "PersonalityService": {
            "personality-001": {
              "version": 3,
              "creativity": 80,
              "lastModified": "2024-01-01T10:00:00.000Z"
            }
          },
          "AgentService": {
            "agent-001": {
              "personalityId": "personality-001",
              "version": 2,
              "configurationHash": "old-hash-123",
              "lastModified": "2024-01-01T09:55:00.000Z"
            }
          },
          "FileService": {
            "/agents/agent-001.json": {
              "checksum": "old-hash-123",
              "version": 2,
              "lastModified": "2024-01-01T09:55:00.000Z"
            }
          }
        },
        "inconsistencyReason": "Network partition during update",
        "maxInconsistencyWindow": 30000
      },
      "consistencyReconciliation": {
        "triggerEvent": "network_partition_resolved",
        "reconciliationSteps": [
          {
            "step": 1,
            "service": "ConfigurationService",
            "operation": "detectInconsistencies",
            "expectedFindings": [
              {
                "type": "version_mismatch",
                "entities": ["personality-001", "agent-001"],
                "severity": "high"
              },
              {
                "type": "checksum_mismatch",
                "entities": ["agent-001", "/agents/agent-001.json"],
                "severity": "medium"
              }
            ]
          },
          {
            "step": 2,
            "service": "AgentService",
            "operation": "syncWithPersonality",
            "input": {
              "agentId": "agent-001",
              "personalityId": "personality-001",
              "targetVersion": 3
            },
            "expectedDuration": 200
          },
          {
            "step": 3,
            "service": "FileService",
            "operation": "updateFileFromAgent",
            "input": {
              "filePath": "/agents/agent-001.json",
              "agentId": "agent-001"
            },
            "expectedDuration": 100
          }
        ],
        "consistencyValidation": {
          "maxWaitTime": 5000,
          "validationInterval": 100,
          "successCriteria": {
            "allVersionsMatch": true,
            "allChecksumsMatch": true,
            "timestampsWithinWindow": true
          }
        }
      },
      "expectedFinalConsistentState": {
        "services": {
          "PersonalityService": {
            "personality-001": {
              "version": 3,
              "creativity": 80
            }
          },
          "AgentService": {
            "agent-001": {
              "personalityId": "personality-001",
              "version": 3,
              "configurationHash": "new-hash-456"
            }
          },
          "FileService": {
            "/agents/agent-001.json": {
              "checksum": "new-hash-456",
              "version": 3
            }
          }
        },
        "consistencyMetrics": {
          "reconciliationTime": "under_5_seconds",
          "dataLoss": "none",
          "automaticRecovery": true
        }
      }
    },
    "partialServiceFailure": {
      "name": "Partial Service Failure Handling",
      "description": "System maintains consistency when some services are unavailable",
      "serviceAvailability": {
        "PersonalityService": "available",
        "RoleService": "available",
        "AgentService": "unavailable",
        "FileService": "available",
        "ValidationService": "degraded"
      },
      "operationRequest": {
        "type": "create_unified_configuration",
        "payload": {
          "personalityId": "personality-new-001",
          "roleId": "role-new-001",
          "agentName": "New Test Agent"
        },
        "requiredServices": [
          "PersonalityService",
          "RoleService",
          "AgentService",
          "FileService"
        ]
      },
      "expectedBehavior": {
        "immediateResponse": {
          "status": "partial_success",
          "completedOperations": [
            {
              "service": "PersonalityService",
              "operation": "validatePersonality",
              "status": "completed"
            },
            {
              "service": "RoleService",
              "operation": "validateRole",
              "status": "completed"
            }
          ],
          "failedOperations": [
            {
              "service": "AgentService",
              "operation": "createAgent",
              "status": "service_unavailable",
              "retryScheduled": true
            }
          ],
          "deferredOperations": [
            {
              "service": "FileService",
              "operation": "persistConfiguration",
              "status": "deferred",
              "dependsOn": ["AgentService"]
            }
          ]
        },
        "compensationStrategy": {
          "type": "graceful_degradation",
          "actions": [
            {
              "action": "cache_partial_configuration",
              "duration": "24_hours"
            },
            {
              "action": "schedule_retry",
              "intervals": [60, 300, 900],
              "maxRetries": 3
            },
            {
              "action": "notify_monitoring",
              "severity": "warning"
            }
          ]
        },
        "recoveryScenario": {
          "triggerEvent": "AgentService_becomes_available",
          "recoverySteps": [
            {
              "step": 1,
              "action": "resume_deferred_operations",
              "expectedDuration": 200
            },
            {
              "step": 2,
              "action": "validate_consistency",
              "expectedDuration": 100
            },
            {
              "step": 3,
              "action": "complete_configuration",
              "expectedDuration": 150
            }
          ],
          "successCriteria": {
            "configurationCompleted": true,
            "consistencyMaintained": true,
            "noDataCorruption": true
          }
        }
      }
    }
  },
  "consistencyMetrics": {
    "measurementPoints": {
      "propagationLatency": {
        "description": "Time for changes to propagate across services",
        "targetMs": 1000,
        "warningThresholdMs": 2000,
        "errorThresholdMs": 5000
      },
      "convergenceTime": {
        "description": "Time for system to reach consistent state",
        "targetMs": 3000,
        "warningThresholdMs": 10000,
        "errorThresholdMs": 30000
      },
      "dataFreshnessWindow": {
        "description": "Maximum acceptable staleness of data",
        "targetMs": 500,
        "warningThresholdMs": 2000,
        "errorThresholdMs": 10000
      }
    },
    "consistencyLevels": {
      "strong": {
        "description": "All services immediately consistent",
        "guarantees": ["immediate_visibility", "no_stale_reads"]
      },
      "eventual": {
        "description": "System eventually becomes consistent",
        "guarantees": ["eventual_visibility", "bounded_staleness"]
      },
      "weak": {
        "description": "Best-effort consistency",
        "guarantees": ["eventual_visibility"]
      }
    }
  },
  "testConfiguration": {
    "simulationSettings": {
      "networkLatencyMs": 50,
      "serviceLatencyVariation": 0.2,
      "partitionProbability": 0.01,
      "serviceFailureProbability": 0.05
    },
    "validationSettings": {
      "consistencyCheckInterval": 100,
      "maxValidationTime": 10000,
      "retryAttempts": 3,
      "timeoutMs": 30000
    }
  }
}
