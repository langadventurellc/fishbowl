{
  "transactionConsistencyScenarios": {
    "successfulMultiServiceTransaction": {
      "description": "Complete transaction across personality, role, and agent services",
      "transactionSteps": [
        {
          "step": 1,
          "service": "PersonalityService",
          "operation": "createPersonality",
          "data": {
            "id": "tx-personality-001",
            "name": "Transaction Test Personality",
            "openness": 75,
            "conscientiousness": 80,
            "extraversion": 60,
            "agreeableness": 70,
            "neuroticism": 35
          },
          "expectedResult": "success"
        },
        {
          "step": 2,
          "service": "RoleService",
          "operation": "createRole",
          "data": {
            "id": "tx-role-001",
            "name": "Transaction Test Role",
            "capabilities": ["analysis", "communication"],
            "constraints": ["domain-specific"]
          },
          "expectedResult": "success"
        },
        {
          "step": 3,
          "service": "AgentService",
          "operation": "createAgent",
          "data": {
            "name": "Transaction Test Agent",
            "personalityId": "tx-personality-001",
            "role": "tx-role-001",
            "modelId": "gpt-4-turbo"
          },
          "expectedResult": "success"
        }
      ],
      "expectedFinalState": {
        "personalityExists": true,
        "roleExists": true,
        "agentExists": true,
        "referencesValid": true
      },
      "transactionType": "successful_commit"
    },
    "partialFailureWithRollback": {
      "description": "Transaction that fails at step 3 and requires rollback",
      "transactionSteps": [
        {
          "step": 1,
          "service": "PersonalityService",
          "operation": "createPersonality",
          "data": {
            "id": "tx-personality-002",
            "name": "Rollback Test Personality",
            "openness": 65,
            "conscientiousness": 75
          },
          "expectedResult": "success"
        },
        {
          "step": 2,
          "service": "RoleService",
          "operation": "createRole",
          "data": {
            "id": "tx-role-002",
            "name": "Rollback Test Role",
            "capabilities": ["testing"]
          },
          "expectedResult": "success"
        },
        {
          "step": 3,
          "service": "AgentService",
          "operation": "createAgent",
          "data": {
            "name": "Rollback Test Agent",
            "personalityId": "tx-personality-002",
            "role": "tx-role-002",
            "modelId": "invalid-model-id"
          },
          "expectedResult": "failure",
          "simulatedError": {
            "code": "INVALID_MODEL",
            "message": "Model 'invalid-model-id' does not exist"
          }
        }
      ],
      "rollbackSteps": [
        {
          "step": "rollback-2",
          "service": "RoleService",
          "operation": "deleteRole",
          "data": {
            "id": "tx-role-002"
          },
          "expectedResult": "success"
        },
        {
          "step": "rollback-1",
          "service": "PersonalityService",
          "operation": "deletePersonality",
          "data": {
            "id": "tx-personality-002"
          },
          "expectedResult": "success"
        }
      ],
      "expectedFinalState": {
        "personalityExists": false,
        "roleExists": false,
        "agentExists": false,
        "systemConsistent": true
      },
      "transactionType": "rollback_required"
    },
    "concurrentTransactionConflict": {
      "description": "Two concurrent transactions competing for same resources",
      "transaction1": {
        "id": "tx-001",
        "operations": [
          {
            "service": "PersonalityService",
            "operation": "updatePersonality",
            "data": {
              "id": "shared-personality-001",
              "name": "Updated by Transaction 1",
              "openness": 85
            }
          },
          {
            "service": "AgentService",
            "operation": "createAgent",
            "data": {
              "name": "Agent TX1",
              "personalityId": "shared-personality-001",
              "role": "analyst"
            }
          }
        ]
      },
      "transaction2": {
        "id": "tx-002",
        "operations": [
          {
            "service": "PersonalityService",
            "operation": "updatePersonality",
            "data": {
              "id": "shared-personality-001",
              "name": "Updated by Transaction 2",
              "conscientiousness": 90
            }
          },
          {
            "service": "AgentService",
            "operation": "createAgent",
            "data": {
              "name": "Agent TX2",
              "personalityId": "shared-personality-001",
              "role": "creative-director"
            }
          }
        ]
      },
      "conflictResolution": "first_writer_wins",
      "expectedOutcome": {
        "transaction1": "success",
        "transaction2": "conflict_resolution_required",
        "finalState": "consistent"
      }
    }
  },
  "atomicOperationScenarios": {
    "agentCreationWithDependencies": {
      "description": "Atomic agent creation that validates all dependencies",
      "operation": "createAgentAtomic",
      "validationSteps": [
        {
          "step": "validate_personality_exists",
          "personalityId": "personality-validated",
          "expectedResult": "exists"
        },
        {
          "step": "validate_role_exists",
          "roleId": "role-validated",
          "expectedResult": "exists"
        },
        {
          "step": "validate_model_compatibility",
          "modelId": "gpt-4-turbo",
          "personalityId": "personality-validated",
          "roleId": "role-validated",
          "expectedResult": "compatible"
        }
      ],
      "creationStep": {
        "step": "create_agent",
        "data": {
          "name": "Atomically Created Agent",
          "personalityId": "personality-validated",
          "role": "role-validated",
          "modelId": "gpt-4-turbo"
        },
        "expectedResult": "success"
      },
      "atomicityRequirement": "all_or_nothing"
    },
    "agentDeletionWithCleanup": {
      "description": "Atomic agent deletion with dependency cleanup",
      "operation": "deleteAgentAtomic",
      "preExistingState": {
        "agent": {
          "id": "agent-to-delete",
          "name": "Agent For Deletion",
          "personalityId": "personality-referenced",
          "role": "role-referenced"
        },
        "dependencies": {
          "configurations": ["config-1", "config-2"],
          "templates": ["template-based-on-agent"]
        }
      },
      "deletionSteps": [
        {
          "step": "remove_dependent_configurations",
          "configurations": ["config-1", "config-2"],
          "expectedResult": "success"
        },
        {
          "step": "remove_dependent_templates",
          "templates": ["template-based-on-agent"],
          "expectedResult": "success"
        },
        {
          "step": "delete_agent",
          "agentId": "agent-to-delete",
          "expectedResult": "success"
        }
      ],
      "expectedFinalState": {
        "agentExists": false,
        "dependenciesCleared": true,
        "systemConsistent": true
      }
    }
  },
  "errorRecoveryScenarios": {
    "networkFailureDuringTransaction": {
      "description": "Network failure occurs during multi-service transaction",
      "transactionInProgress": {
        "completedSteps": [
          {
            "service": "PersonalityService",
            "operation": "createPersonality",
            "status": "completed"
          }
        ],
        "failedStep": {
          "service": "RoleService",
          "operation": "createRole",
          "error": "NETWORK_TIMEOUT",
          "status": "failed"
        },
        "pendingSteps": [
          {
            "service": "AgentService",
            "operation": "createAgent",
            "status": "pending"
          }
        ]
      },
      "recoveryStrategy": "rollback_completed_steps",
      "expectedRecoveryActions": [
        {
          "action": "rollback_personality_creation",
          "service": "PersonalityService",
          "operation": "deletePersonality",
          "expectedResult": "success"
        }
      ],
      "expectedFinalState": {
        "systemConsistent": true,
        "noPartialState": true,
        "errorLogged": true
      }
    },
    "serviceUnavailableDuringOperation": {
      "description": "Service becomes unavailable during cross-service operation",
      "scenario": {
        "operation": "createAgent",
        "availableServices": ["PersonalityService", "AgentService"],
        "unavailableServices": ["RoleService"],
        "requiredServices": [
          "PersonalityService",
          "RoleService",
          "AgentService"
        ]
      },
      "expectedBehavior": {
        "operationResult": "failure",
        "errorCode": "SERVICE_UNAVAILABLE",
        "errorMessage": "RoleService is currently unavailable",
        "retryable": true,
        "graceDegradation": false
      }
    }
  },
  "metadata": {
    "version": "1.0.0",
    "description": "Transaction consistency and atomic operation test scenarios",
    "lastUpdated": "2025-07-28T00:00:00.000Z",
    "categories": [
      "transactionConsistencyScenarios",
      "atomicOperationScenarios",
      "errorRecoveryScenarios"
    ],
    "testingFocus": [
      "transaction_atomicity",
      "rollback_mechanisms",
      "cross_service_consistency",
      "error_recovery",
      "concurrent_transaction_handling"
    ]
  }
}
